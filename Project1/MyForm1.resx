<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>